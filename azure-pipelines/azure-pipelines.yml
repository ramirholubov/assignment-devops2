# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkrg: 'general-resources'
  bkstrg: 'accountforstatefiles'
  bkcontainer: 'tfstate'
  bkstrgkey: 'terraform.tfstate'

stages:
  - stage: validate
    jobs:
    - job: validate
      continueOnError: false
      steps:
      - task: TerraformInstaller@1
        displayName: tfinstall
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTaskV4@4
        displayName: tfinit
        inputs:
          workingDirectory: './terraform/'
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'devops-assignment-connection'
          backendAzureRmResourceGroupName: '$(bkrg)'
          backendAzureRmStorageAccountName: '$(bkstrg)'
          backendAzureRmContainerName: '$(bkcontainer)'
          backendAzureRmKey: '$(bkstrgkey)'
      - task: TerraformTaskV4@4
        displayName: tfvalidate
        inputs:
          workingDirectory: './terraform/'
          provider: 'azurerm'
          command: 'validate'
  - stage: plan
    condition: succeeded('validate')
    dependsOn: validate
    jobs:
    - job: plan
      steps:
      - task: TerraformInstaller@1
        displayName: tfinstall
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTaskV4@4
        displayName: tfinit
        inputs:
          workingDirectory: './terraform/'
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: 'devops-assignment-connection'
          backendAzureRmResourceGroupName: '$(bkrg)'
          backendAzureRmStorageAccountName: '$(bkstrg)'
          backendAzureRmContainerName: '$(bkcontainer)'
          backendAzureRmKey: '$(bkstrgkey)'
      - task: TerraformTaskV4@4
        displayName: tfplan
        inputs:
          workingDirectory: './terraform/'
          provider: 'azurerm'
          command: 'plan'
          backendServiceArm: 'devops-assignment-connection'
          backendAzureRmResourceGroupName: '$(bkrg)'
          backendAzureRmStorageAccountName: '$(bkstrg)'
          backendAzureRmContainerName: '$(bkcontainer)'
          backendAzureRmKey: '$(bkstrgkey)'
#          commandOptions: '-input=false'
          environmentServiceNameAzureRM: 'devops-assignment-connection'

